const proxyquire = require('proxyquire')
const sinon = require('sinon')
const supertest = require('supertest')
const expect = require('chai').expect

const express = require('express')

describe('GET /ping', function () {
  let app, getUserStub, request, route

  beforeEach(function () {
    // A stub we can use to control conditionals
    getCoordsStub = sinon.stub();

    // Create an express application object
    app = express();

	route = proxyquire('../src/Routes/coords.js', {
      './coords': {
          //getByUsername: getUserStub
        getCoords: getCoordsStub
      }
    });

    // Bind a route to our application
      //route(app);

    console.log(route(app))
    // Get a supertest instance so we can make requests
      //request = supertest(app);
  })

    /*it('should respond with a 404 and a null', function (done) {
    getCoordsStub.returns({});

    request
      .get('/coords')
      .expect('Content-Type', /json/)
      .expect(404, function (err, res) {
          console.log("david", res.body)
        expect(res.body).to.deep.equal({
          status: 'not ok',
          data: null
        })
        done()
      })
  })*/

  it('should respond with 200 and a user object', function (done) {
    const userData = {
      username: 'nodejs'
    }

    getCoordsStub.returns(userData)

    request
      .get('/coords')
      .expect('Content-Type', /json/)
      .expect(200, function (err, res) {
        expect(res.body).to.deep.equal({
          status: 'ok',
          data: userData
        });
        done();
      });
  });
})

